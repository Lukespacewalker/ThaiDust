// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThaiDust.Core.Model.Persistent;

namespace ThaiDust.Core.Migrations
{
    [DbContext(typeof(DustContext))]
    partial class DustContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("ThaiDust.Core.Model.Persistent.Record", b =>
                {
                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("StationCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("DateTime", "StationCode");

                    b.HasIndex("StationCode");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("ThaiDust.Core.Model.Persistent.Station", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("ThaiDust.Core.Model.Persistent.Record", b =>
                {
                    b.HasOne("ThaiDust.Core.Model.Persistent.Station", "Station")
                        .WithMany("Records")
                        .HasForeignKey("StationCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
